<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        .line{
            overflow: hidden;
        }
        .seat{
            width: 30px;
            height: 30px;
            border-radius: 3px;

            margin: 2px;
            float: left;
        }
        .enable{
            background-color: lightblue;
        }
        .disable{
            background-color: lightgray;
        }
    </style>
</head>
<body>
    <h2>main</h2>
    <div>airplane</div>
    <!-- 선택 박스 태그 -->
    <select name="" id="selectBtn">
        <option value="0">no.1</option>
        <option value="1">no.2</option>
        <option value="2">no.3</option>
    </select>
    <div id="content"></div>
</body>
<script>
    window.onload = ()=>{
        const socket = io.connect(); // 클라이언트의 소켓 연결 시도
        socket.on("reserve",(data)=>{
            if(data.selectCount == selectBtn.selectedIndex){
                let target = document.querySelector(`div[data-x = "${data.x}"][data-y = "${data.y}"]`);
                target.classList.remove("enable");
                target.classList.add("disable");
            };
        });
        let selectCount = 0;
        selectBtn.onchange = function(){
            content.innerHTML = "";
            // .selectedIndex : select 태그의 선택한 옵션의 value를 호출한다.
            selectCount = this.selectedIndex;
            console.log(selectCount);
            // 시트 생성 함수 여기에
            getseats(selectCount);
        };
        
        // 시트를 클릭해서 예약하는 함수
        const onClickSeat = function(){
            // classList.contains : 클래스가 있는지 확인하는 메소드; 매개변수로 클래스 이름
            if(this.classList.contains("disable")){
                // 이미 예약이 되어있으면 여기서 끝
                return;
            };
            // getAttribute : 어트리뷰트 데이터 속성을 호출하는 메소드; 매개변수로 가져올 속성 이름
            let x = this.getAttribute("data-x");
            let y = this.getAttribute("data-y");
            if(confirm("You want this seat?")){
                // socket 이벤트를 푸시할 예정
                socket.emit("reserve",{
                    x,
                    y,
                    selectCount
                });
            }else{
                alert("seat not good enough for you");
            };
        };

        // 시트 생성 함수
        function getseats(selectIndex){
            // 요청 응답으로 시트를 가져올 예정; 변수로 받을 예정
            // axios : 무조건 이것만 쓸거임
            // CDN 으로 사용
            // 요청은 get 방식이고, 매개변수는 아이디 값으로 요청
            axios.get("/seats/"+selectIndex)
            .then((e)=>{
                console.log(e);
                let {data} = e;
                data.forEach((line,indexY)=>{
                    // 좌석배치의 열 
                    let lineElem = document.createElement("div");
                    lineElem.classList.add("line");

                    line.forEach((seat,indexX)=>{
                        // 좌석들
                        let seatElem = document.createElement("div");
                        seatElem.classList.add("seat");
                        // 데이터 속성이라는 어트리뷰트 속성을 사용
                        // setAttribute : 어트리뷰트 속성 추가 메소드
                        // 첫번째 매개변수 : 속성의 이름
                        // 두번째 매개변수 : 속성의 값
                        seatElem.setAttribute("data-x",indexX);
                        seatElem.setAttribute("data-y",indexY);
                        // 빈공간, 예약 가능한 좌석, 이미 예약된 좌석
                        if(seat == 1){
                            seatElem.classList.add("enable");
                            // 좌석을 클릭하면 예약하게끔
                            seatElem.addEventListener("click",onClickSeat);
                        }else if(seat == 2){
                            seatElem.classList.add("disable");
                        };
                        lineElem.appendChild(seatElem);
                    });
                    content.appendChild(lineElem);
                });
            });
        };
        getseats(0);
    };
</script>
</html>